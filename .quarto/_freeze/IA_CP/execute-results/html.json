{
  "hash": "f9db881e0333cdbcd57d15e5a1b10f9c",
  "result": {
    "markdown": "---\ntitle: \"Innovando la Contratación Pública con Inteligencia Artificial\"\nsubtitle: 'TIAckathon 2023'\n\ntitle-block-banner: \"#465050\" \nauthor: \n  - name: Bryan Jair Aragón Pilco\ndate: today\nformat:\n  html: \n    theme: Slate\n    documentclass: 'report'\n    toc: true\n    number-sections: true\n    toc-title: 'Tabla de Contenido'\n    toc-location: left\n    toc-depth: 4\n    embed-resources: true\n    smooth-scroll: true\n    \nexecute: \n  echo: true\n  warning: false\n  error: false\n---\n\n\n# INTRODUCCIÓN\n\nLas Contrataciones Abiertas permiten mejorar la divulgación, calidad y uso de los datos de compras públicas en todas las fases del procedimiento mediante la implementación del Estándar de Datos para las Contrataciones Abiertas - EDCA (OCDS). \n\nEl presente trabajo pretende centrar a la Contratación Pública como herramienta fundamental para tomar decisiones de Política Monetaria, su importancia radica en la gran cantidad de dinero que es destinada año a año a los procesos de Compras Públicas. Esta importante suma de dinero tiene como finalidad dinamizar el trabajo a través de los distintos proveedores, es decir, la eficiencia y el buen manejo del dinero hacia el destinatario final mejorará la economía del país, puesto que, el proveedor, contratista, consultor o cualquier persona que le venda sus servicios, obras y bienes al pondrá a trabajar el dinero obtenido, dando empelo, adquiriendo suministros o cualquier materia prima que le permita cumplir con el objeto de contratación. \n\n::: callout-note\nEl presente análisis se realiza mediante el lenguaje R y se presenta en formato QUARTO. Palabras claves: Liquidez M2, Gastos del Sector Público, Ingresos tributarios, Política Económica.\n:::\n\n# LIBRERÍAS UTILIZADAS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(openxlsx)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(corrplot)\nlibrary(tidymodels)\nlibrary(GGally)\nlibrary(randomForest)\nlibrary(paletteer)\n```\n:::\n\n\n\n# DATA\n\n> Los datos serán filtrados y representados de forma mensual a partir de enero del 2015 hasta agosto del 2023. Los datos con los que se realiza el presente trabajo constan de 4 variables:\n\n\n| Descripción               | Siglas    | Unidad | Tipo         |\n|---------------------------|-----------|--------|--------------|\n| Liquidez Total            | M2        | num    | Independiente|\n| Ingresos Tributarios      | Ingr_trib | num    | Independiente|\n| Gastos del Sector Público | Gast_SPF  | num    | Independiente|\n| Contratación Pública      | CP        | num    | Dependiente  |\n\n: Variables utilizadas {#tbl-letters}\n\n## Data OCDS\n\nLos datos se extraen de la siguiente página: [DataOCD](https://datosabiertos.compraspublicas.gob.ec/PLATAFORMA)\n\n> **Data OCDS, correspondiente al total del monto adjudicado del año 2023.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataA1 <- read.csv('awards_2023.csv')\ndataA1 <- as.data.frame(dataA1) %>% \n  select(c(date, amount)) %>% \n  drop_na() %>% \n  mutate(date= ymd_hms(date)) %>% \n  mutate(mes = month(date))\n  \ndataA2 <- dataA1 %>% \n  select(c(amount, mes)) %>% \n  mutate_all(~coalesce(.,8)) %>% \n  group_by(mes)%>% \n  summarise(amount= sum(amount)) %>% \n  slice(-c( 9))\n  \npaste('El monto total de Contratación pública al 2023 representa la cantidad de:',sum(dataA2$amount), 'usd.')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El monto total de Contratación pública al 2023 representa la cantidad de: 2810144175.2 usd.\"\n```\n:::\n:::\n\n\n> **Data OCDS, correspondiente al total del monto adjudicado del año 2022.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataB1 <- read.csv('awards_2022.csv')\ndataB1 <- as.data.frame(dataB1) %>% \n  select(c(date, amount)) %>% \n  drop_na() %>% \n  mutate(date= ymd_hms(date)) %>% \n  mutate(mes = month(date))\n  \ndataB2 <- dataB1 %>% \n  select(c(amount, mes)) %>% \n  mutate_all(~coalesce(.,12)) %>% \n  group_by(mes)%>% \n  summarise(amount= sum(amount))\n\n\npaste('El monto total de Contratación pública del año 2022 representa la cantidad de:',sum(dataB2$amount), 'usd.')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El monto total de Contratación pública del año 2022 representa la cantidad de: 6794800700.02 usd.\"\n```\n:::\n:::\n\n\n> **Data OCDS, correspondiente al total del monto adjudicado del año 2021.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataC1 <- read.csv('awards_2021.csv')\ndataC1 <- as.data.frame(dataC1) %>% \n  select(c(date, amount)) %>% \n  drop_na() %>% \n  mutate(date= ymd_hms(date)) %>% \n  mutate(mes = month(date))\n  \ndataC2 <- dataC1 %>% \n  select(c(amount, mes)) %>% \n  mutate_all(~coalesce(.,12)) %>% \n  group_by(mes)%>% \n  summarise(amount= sum(amount))\n\npaste('El monto total de Contratación pública del año 2021 representa la cantidad de:',sum(dataC2$amount), 'usd.')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El monto total de Contratación pública del año 2021 representa la cantidad de: 4676997257.82 usd.\"\n```\n:::\n:::\n\n\n> **Data OCDS, correspondiente al total del monto adjudicado del año 2020.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataD1 <- read.csv('awards_2020.csv')\ndataD1 <- as.data.frame(dataD1) %>% \n  select(c(date, amount)) %>% \n  drop_na() %>% \n  mutate(date= ymd_hms(date)) %>% \n  mutate(mes = month(date))\n  \ndataD2 <- dataD1 %>% \n  select(c(amount, mes)) %>% \n  mutate_all(~coalesce(.,12)) %>% \n  group_by(mes)%>% \n  summarise(amount= sum(amount))\n\npaste('El monto total de Contratación pública del año 2020 representa la cantidad de:',sum(dataD2$amount), 'usd.')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El monto total de Contratación pública del año 2020 representa la cantidad de: 3858050268.61 usd.\"\n```\n:::\n:::\n\n\n> **Data OCDS, correspondiente al total del monto adjudicado del año 2019.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataE1 <- read.csv('awards_2019.csv')\ndataE1 <- as.data.frame(dataE1) %>% \n  select(c(date, amount)) %>% \n  drop_na() %>% \n  mutate(date= ymd_hms(date)) %>% \n  mutate(mes = month(date))\n  \ndataE2 <- dataE1 %>% \n  select(c(amount, mes)) %>% \n  mutate_all(~coalesce(.,12)) %>% \n  group_by(mes)%>% \n  summarise(amount= sum(amount))\n\npaste('El monto total de Contratación pública del año 2019 representa la cantidad de:',sum(dataE2$amount), 'usd.')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El monto total de Contratación pública del año 2019 representa la cantidad de: 5163524864.54 usd.\"\n```\n:::\n:::\n\n\n> **Data OCDS, correspondiente al total del monto adjudicado del año 2018.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataF1 <- read.csv('awards_2018.csv')\ndataF1 <- as.data.frame(dataF1) %>% \n  select(c(date, amount)) %>% \n  drop_na() %>% \n  mutate(date= ymd_hms(date)) %>% \n  mutate(mes = month(date))\n  \ndataF2 <- dataF1 %>% \n  select(c(amount, mes)) %>% \n  mutate_all(~coalesce(.,12)) %>% \n  group_by(mes)%>% \n  summarise(amount= sum(amount))\n\npaste('El monto total de Contratación pública del año 2018 representa la cantidad de:',sum(dataF2$amount), 'usd.')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El monto total de Contratación pública del año 2018 representa la cantidad de: 6313959328.78 usd.\"\n```\n:::\n:::\n\n\n> **Data OCDS, correspondiente al total del monto adjudicado del año 2017.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataG1 <- read.csv('awards_2017.csv')\ndataG1 <- as.data.frame(dataG1) %>% \n  select(c(date, amount)) %>% \n  drop_na() %>% \n  mutate(date= ymd_hms(date)) %>% \n  mutate(mes = month(date))\n  \ndataG2 <- dataG1 %>% \n  select(c(amount, mes)) %>% \n  mutate_all(~coalesce(.,12)) %>% \n  group_by(mes)%>% \n  summarise(amount= sum(amount))\n\npaste('El monto total de Contratación pública del año 2017 representa la cantidad de:',sum(dataG2$amount), 'usd.')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El monto total de Contratación pública del año 2017 representa la cantidad de: 5255102657.9 usd.\"\n```\n:::\n:::\n\n\n> **Data OCDS, correspondiente al total del monto adjudicado del año 2016.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataH1 <- read.csv('awards_2016.csv')\ndataH1 <- as.data.frame(dataH1) %>% \n  select(c(date, amount)) %>% \n  drop_na() %>% \n  mutate(date= ymd_hms(date)) %>% \n  mutate(mes = month(date))\n  \ndataH2 <- dataH1 %>% \n  select(c(amount, mes)) %>% \n  mutate_all(~coalesce(.,12)) %>% \n  group_by(mes)%>% \n  summarise(amount= sum(amount))\n\npaste('El monto total de Contratación pública del año 2016 representa la cantidad de:',sum(dataH2$amount), 'usd.')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El monto total de Contratación pública del año 2016 representa la cantidad de: 4696961004.38 usd.\"\n```\n:::\n:::\n\n\n> **Data OCDS, correspondiente al total del monto adjudicado del año 2015.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataI1 <- read.csv('awards_2015.csv')\ndataI1 <- as.data.frame(dataI1) %>% \n  select(c(date, amount)) %>% \n  drop_na() %>% \n  mutate(date= ymd_hms(date)) %>% \n  mutate(mes = month(date))\n  \ndataI2 <- dataI1 %>% \n  select(c(amount, mes)) %>% \n  mutate_all(~coalesce(.,12)) %>% \n  group_by(mes)%>% \n  summarise(amount= sum(amount))\n\npaste('El monto total de Contratación pública del año 2015 representa la cantidad de:',sum(dataI2$amount), 'usd.')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"El monto total de Contratación pública del año 2015 representa la cantidad de: 5997696058.51 usd.\"\n```\n:::\n:::\n\n\n\n## Data de Variables-Predictoras\n\n\n::: {.cell}\n\n```{.r .cell-code}\nData <- read_excel(\"Data.xlsx\")\n\nData %>% \n  slice_head(n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 5\n  date                         m2   Ingr_trib    Gast_SPF    Ofert_M1\n  <dttm>                    <dbl>       <dbl>       <dbl>       <dbl>\n1 2015-01-01 00:00:00 39113998008 1538708691. 2346854931. 18052328008\n2 2015-02-01 00:00:00 39058055359 1094217003. 3246543749. 17847905359\n3 2015-03-01 00:00:00 39560879416 1239747228. 3697877166. 18282969416\n4 2015-04-01 00:00:00 39549086051 1972151249. 3185393168. 18172626051\n5 2015-05-01 00:00:00 39566676736 1208172259. 3691454351. 18157936736\n```\n:::\n:::\n\n\n## Data Compilada\n\n- Datos compilados de forma mensual, correspondiente a los montos adjudicados desde el periodo 2015 al 2022.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naños <- rep(2015:2022, each = 12)\nmeses <- rep(1:12, times = 8)\nmeses2023 <- rep(1:8, times =1)\ncantidad <- rbind(dataI2,dataH2,dataG2,dataF2,dataE2,dataD2,dataC2,dataB2) %>% \n  select(amount)\n# Creamos el dataframe\ndf <- data.frame(Fecha = as.Date(paste(años, meses, \"01\", sep = \"-\"), format = \"%Y-%m-%d\"),cantidad = cantidad)\n\ndataA2 <- data.frame(Fecha = as.Date(paste(2023, meses2023, \"01\", sep = \"-\"), format = \"%Y-%m-%d\"),cantidad =dataA2[2] )\n\ndf <- rbind(df, dataA2)\n\ndataX <- cbind.data.frame(Data, CP=df$amount)\n\ndataX %>%\n  slice_head(n=5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        date          m2  Ingr_trib   Gast_SPF    Ofert_M1        CP\n1 2015-01-01 39113998008 1538708691 2346854931 18052328008 347850631\n2 2015-02-01 39058055359 1094217003 3246543749 17847905359 193761873\n3 2015-03-01 39560879416 1239747228 3697877166 18282969416 312681954\n4 2015-04-01 39549086051 1972151249 3185393168 18172626051 478483890\n5 2015-05-01 39566676736 1208172259 3691454351 18157936736 362359363\n```\n:::\n\n```{.r .cell-code}\nsummary(dataX)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      date                              m2              Ingr_trib        \n Min.   :2015-01-01 00:00:00.00   Min.   :3.884e+10   Min.   :7.464e+08  \n 1st Qu.:2017-02-22 00:00:00.00   1st Qu.:4.685e+10   1st Qu.:1.087e+09  \n Median :2019-04-16 00:00:00.00   Median :5.401e+10   Median :1.153e+09  \n Mean   :2019-04-16 22:09:13.84   Mean   :5.577e+10   Mean   :1.209e+09  \n 3rd Qu.:2021-06-08 12:00:00.00   3rd Qu.:6.522e+10   3rd Qu.:1.258e+09  \n Max.   :2023-08-01 00:00:00.00   Max.   :7.677e+10   Max.   :2.052e+09  \n    Gast_SPF            Ofert_M1               CP           \n Min.   :2.347e+09   Min.   :1.785e+10   Min.   :3.508e+06  \n 1st Qu.:3.157e+09   1st Qu.:2.269e+10   1st Qu.:2.662e+08  \n Median :3.409e+09   Median :2.491e+10   Median :3.233e+08  \n Mean   :3.543e+09   Mean   :2.495e+10   Mean   :4.381e+08  \n 3rd Qu.:3.660e+09   3rd Qu.:2.844e+10   3rd Qu.:4.174e+08  \n Max.   :6.576e+09   Max.   :3.079e+10   Max.   :2.333e+09  \n```\n:::\n:::\n\n\n# EDA. \n\n- Histograma por cada característica, representando su media y mediana\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a data frame of numeric features & label\nnumeric_features <- dataX %>% \n  select(c(m2, Ingr_trib, Gast_SPF, Ofert_M1, CP))\n\n# Pivot data to a long format\nnumeric_features <- numeric_features %>% \n  pivot_longer(!CP,names_to = \"features\", values_to = \"values\") %>%\n  group_by(features) %>% \n  mutate(Mean = mean(values),\n         Median = median(values))\n\n \n# Plot a histogram for each feature\nnumeric_features %>%\n  ggplot() +\n  geom_histogram(aes(x = values, fill = features), bins = 100, alpha = 0.7, show.legend = F) +\n  facet_wrap(~ features, scales = 'free')+\n  paletteer::scale_fill_paletteer_d(\"ggthemes::excel_Parallax\") +\n  \n  # Add lines for mean and median\n  geom_vline(aes(xintercept = Mean, color = \"Mean\"), linetype = \"dashed\", size = 1.3 ) +\n  geom_vline(aes(xintercept = Median, color = \"Median\"), linetype = \"dashed\", size = 1.3 ) +\n  scale_color_manual(name = \"\", values = c(Mean = \"red\", Median = \"yellow\"))\n```\n\n::: {.cell-output-display}\n![](IA_CP_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n- Con los datos normalizados es fácil ver una aparente relación entre variables. No indica un emparejamiento exacto, pero se ve claramente que el valor más alto de la contratación pública durante el periodo de análisis coincide con los montos más altos de las variables predictoras. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataZ<- as.data.frame(dataX) %>% \n  mutate(Year = year(date))\n  \ndataZ_2 <- dataZ %>% \n  group_by(Year)%>% \n  summarise(CP= sum(CP), m2=sum(m2), Ingr_trib= sum(Ingr_trib), Gast_SPF=sum(Gast_SPF), Ofert_M1=sum(Ofert_M1))\n\n# Pivot data from wide to long\ndf_sample_long <- dataZ_2 %>%\n  pivot_longer(!Year, names_to = \"Metrics\", values_to = \"Values\")\n\n# Normalize the numeric columns\ndf_normalized <- df_sample_long %>% \n  group_by(Metrics) %>% \n  mutate(Values = rescale(Values, to = c(0, 1)))\n\n# Show some of the normalized data\ndf_normalized %>% \n  slice_head(n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 25 × 3\n# Groups:   Metrics [5]\n    Year Metrics  Values\n   <dbl> <chr>     <dbl>\n 1  2015 CP        0.800\n 2  2016 CP        0.474\n 3  2017 CP        0.614\n 4  2018 CP        0.879\n 5  2019 CP        0.591\n 6  2015 Gast_SPF  0.858\n 7  2016 Gast_SPF  0.874\n 8  2017 Gast_SPF  0.825\n 9  2018 Gast_SPF  0.928\n10  2019 Gast_SPF  0.853\n# … with 15 more rows\n```\n:::\n\n```{.r .cell-code}\n# Comparación de variables mediante un bar plot\nggplot(data = df_normalized) +\n  geom_bar(mapping = aes(x = Year, y = Values, fill = Metrics), alpha = 0.7, stat = \"identity\", position = position_dodge(width = 0.9)) +\n  xlab('Años') +\n  ylab('') +\n  scale_fill_paletteer_d(\"calecopal::kelp1\") +\n  theme(\n    panel.grid = element_blank(),\n    panel.grid.major.y = element_line(color = '#95a5a6',\n                                      linetype = 'dashed',\n                                      size = 0.5),\n    axis.text.x = element_text(angle = 90),\n    legend.title = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](IA_CP_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot a scatter plot for each feature\nnumeric_features %>% \n  mutate(corr_coef = cor(values, CP)) %>%\n  mutate(features = paste(features, ' vs CP, r = ', corr_coef, sep = '')) %>% \n  ggplot(aes(x = values, y = CP, color = features)) +\n  geom_point(alpha = 0.7, show.legend = F) +\n  facet_wrap(~ features, scales = 'free')+\n  paletteer::scale_color_paletteer_d(\"ggthemes::excel_Parallax\")\n```\n\n::: {.cell-output-display}\n![](IA_CP_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n# Modelos\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Seleccionamos las caracterisitcas y etiquetas deseadas\ndataSelect <- dataX %>%\n  select(c(m2, Ingr_trib, Gast_SPF, Ofert_M1, CP))\n\n# Dividimos 80% de los datos para training y el resto para testing\nset.seed(2056)\ndata_split <- dataSelect %>% \n  initial_split(prop = 0.8)\n\n# Extracción de los datos\ndataTrain <- training(data_split)\ndataTest <- testing(data_split)\n\n# Especificamos algunas metricas de regresión\n\neval_metric <- metric_set(rmse, rsq)\n\ncat(\"Training Set\", nrow(dataTrain), \"rows\", \"\\nTest Set\", nrow(dataTest), \"rows\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTraining Set 83 rows \nTest Set 21 rows\n```\n:::\n:::\n\n\n\n## Modelo Random Forest\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# For reproducibility\nset.seed(2056)\n\n# Build a random forest model specification\nrf_spec <- rand_forest() %>% \n  set_engine('randomForest') %>% \n  set_mode('regression')\n\n# Train a random forest model \nrf_mod <- rf_spec %>% \n  fit(CP ~ ., data = dataTrain)\n\nresults_rf <- rf_mod %>% \n  augment(new_data = dataTest) %>% \n  rename(predictions = .pred)\n\n# Create a metric set\neval_metrics_rf <- metric_set(rmse, rsq)\n\nrf_metrics <- eval_metrics_rf(data = results_rf,\n                                  truth = CP,\n                                  estimate = predictions)\n                          \nrf_plt <- results_rf %>% \n  ggplot(mapping = aes(x = CP, y = predictions)) +\n  geom_point(color = '#6CBE50FF') +\n  geom_smooth(method = 'lm', color = '#2B7FF9FF', se = F) +\n  ggtitle(\"Daily Bike Share Predictions\") +\n  xlab(\"Actual Labels\") +\n  ylab(\"Predicted Labels\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\nlist(rf_metrics[2, ], rf_plt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rsq     standard       0.644\n\n[[2]]\n```\n:::\n\n::: {.cell-output-display}\n![](IA_CP_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Modelo LASSO\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Build a lasso model\nlasso_spec <- linear_reg(\n  engine = \"glmnet\",\n  mode = \"regression\",\n  penalty = 1,\n  mixture = 1)\n\n# Train\nlasso_mod <- lasso_spec %>% \n  fit(CP ~ ., data = dataTrain)\n\nresults_lasso <- dataTest %>% \n  bind_cols(lasso_mod %>% predict(new_data = dataTest) %>% \n              rename(predictions = .pred))\n\neval_metrics <- metric_set(rmse, rsq)\nlasso_metrics <- eval_metrics(data = results_lasso,\n                                    truth = CP,\n                                    estimate = predictions) \n\ntheme_set(theme_light())\nlasso_plt <- results_lasso %>% \n  ggplot(mapping = aes(x = CP, y = predictions)) +\n  geom_point(size = 1.6, color = 'darkorchid') +\n  geom_smooth(method = 'lm', color = 'black', se = F) +\n  ggtitle(\"Predicciones de Compras públicas\") +\n  xlab(\"Actual Labels\") +\n  ylab(\"Predicted Labels\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Return evaluations\nlist(lasso_metrics[2, ], lasso_plt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rsq     standard       0.659\n\n[[2]]\n```\n:::\n\n::: {.cell-output-display}\n![](IA_CP_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n## Modelo Decision Tree\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Build a decision tree\ntree_spec <- decision_tree(\n  engine = \"rpart\",\n  mode = \"regression\")\n\ntree_mod <- tree_spec %>% \n  fit(CP ~ ., data = dataTrain)\n\nresults_tree <- tree_mod %>% \n  augment(new_data = dataTest) %>% \n  rename(predictions = .pred)\n\ntree_metrics <- eval_metrics(data = results_tree,\n                                  truth = CP,\n                                  estimate = predictions)\n\ntree_plt <- results_tree %>% \n  ggplot(mapping = aes(x = CP, y = predictions)) +\n  geom_point(color = 'tomato') +\n  geom_smooth(method = 'lm', color = 'steelblue', se = F) +\n  ggtitle(\"Predicciones de Compra pública\") +\n  xlab(\"Actual Labels\") +\n  ylab(\"Predicted Labels\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Return evaluations\nlist(tree_metrics[2, ], tree_plt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rsq     standard       0.675\n\n[[2]]\n```\n:::\n\n::: {.cell-output-display}\n![](IA_CP_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n## XGBOOST\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Especificamos un recipiente\nDataRecipe <- recipe(CP ~ ., data = dataTrain) %>% \n  step_normalize(all_numeric_predictors()) %>% \n  step_dummy(all_nominal_predictors()) \n\n# Hacemos una especificación de modelo ajustable\nDataSpec <- boost_tree(trees = 50,\n                         tree_depth = tune(),\n                         learn_rate = tune()) %>% \n  set_engine('xgboost') %>% \n  set_mode('regression')\n\n# Agrupe laa receta y la especificación del modelo mediante un WF\nboost_workflow <- workflow() %>% \n  add_recipe(DataRecipe) %>% \n  add_model(DataSpec)\n```\n:::\n\n\n- Creamos una grilla de parámetros de ajuste\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntree_grid <- grid_regular(tree_depth(), learn_rate(range = c(0.01, 0.3), trans = NULL), levels = 5)\n```\n:::\n\n\n- Cross-validation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2056)\n# 5 fold CV repeated once\nDataFolds <- vfold_cv(data = dataTrain, v = 5, repeats = 1)\n```\n:::\n\n\n- Procesamiento en paralelo\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndoParallel::registerDoParallel()\n\nset.seed(2020)\ntree_grid <- tune_grid(\n  object = boost_workflow,\n  resamples = DataFolds,\n  grid = tree_grid)\n```\n:::\n\n\n- Visualizamos los resultados del tuning \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntree_grid %>% \n  collect_metrics() %>% \n  mutate(tree_depth = factor(tree_depth)) %>% \n  ggplot(mapping = aes(x = learn_rate, y = mean,\n                       color = tree_depth)) +\n  geom_line(size = 0.6) +\n  geom_point(size = 2) +\n  facet_wrap(~ .metric, scales = 'free', nrow = 2)+\n  scale_color_viridis_d(option = \"plasma\", begin = .9, end = 0)\n```\n\n::: {.cell-output-display}\n![](IA_CP_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n- Selección del mejor iperparámetro \n\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_tree <- tree_grid %>% \n  select_best('rmse')\n```\n:::\n\n\n- Finalizar el modelo XGBOOST\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Update workflow\nfinal_wf <- boost_workflow %>% \n  finalize_workflow(best_tree)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Último ajuste\nfinal_fit <- final_wf %>% \n  last_fit(data_split)\n\nfinal_fit %>% \n  collect_metrics('rsq')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n  .metric .estimator     .estimate .config             \n  <chr>   <chr>              <dbl> <chr>               \n1 rmse    standard   292205626.    Preprocessor1_Model1\n2 rsq     standard           0.690 Preprocessor1_Model1\n```\n:::\n:::\n\n\n- Usamos el modelo entrenado\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCP_boost_model <- final_fit$.workflow[[1]]\n\nsaveRDS(CP_boost_model, 'CP_boost_model.rds')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the model\nloaded_model <- readRDS(\"CP_boost_model.rds\")\n\n# Use the model to predict rentals\nresults_1 <- loaded_model %>% \n  augment(dataTest)\n```\n:::\n\n\n# RESULTADOS\n\nDe los 4 modelos analizados, se determina que el modelo Decisión Tree explica de mejor manera los datos, con una métrica rsq de 0.709.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults_tree %>%\n  select(CP, predictions)%>%\n  slice_sample(n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n            CP predictions\n         <dbl>       <dbl>\n 1  258292584.  338747300.\n 2  206021685.  288245734.\n 3 1307497135.  338747300.\n 4  310107341.  338747300.\n 5  510374840.  338747300.\n 6  268640428.  288245734.\n 7  124952456.  288245734.\n 8  104119891   288245734.\n 9  330122809.  288245734.\n10   40332870   452157606.\n```\n:::\n:::\n\n\n\n# CONCLUSIONES\n\n- El modelo de árboles de decisión demuestra una explicación del 70 % de los datos utilizados, si bien es cierto, aun no se puede considerar a esto como un valor altamente representativo, sin embargo, hay que considerar que los datos obtenidos de la plataforma de Contrataciones de Datos Abiertos, no consideran ciertos procesos de contratación, como por ejemplo las ínfimas cuantías, procedimiento más utilizado por las entidades pertenecientes al sector público, la no incorporación de este proceso si representa un déficit monetario altamente significativo.\n\n- Los modelos realizados pueden ser utilizados y mejorados conforme se vaya generando más información, la importancia de este modelo radica en que, con la ayuda del Machine Learning se pueden tomar decisiones de política monetaria, es decir, si el Gobierno Central prevé obtener más liquidez o en su defecto mayores ingresos tributarios, puede acudir a la contratación pública, considerándola como una herramienta dinamizadora de la economía, permitiéndole tener una guía de cuanto recursos invertir en la contratación pública.\n\n# RECOMENDACIONES\n\n- Actualmente el SERCOP permite obtener y visualizar sus datos de 2 sitios web diferentes ([DataOCD](https://datosabiertos.compraspublicas.gob.ec/PLATAFORMA), [Contratación en Cifras](https://app.powerbi.com/view?r=eyJrIjoiMWI4MjI3ODktYWY0NS00YWRmLThmMzItMDZhOWNiZmY2NTI1IiwidCI6ImQ2NDk2NzM4LWY5MTItNGExZS04NDE1LTQwY2E2ZjRhOTRlZCJ9 )), en donde se muestran resultados diferentes, por ejemplo; El monto total de Contratación Pública adjudicado en el año 2022 en la página [DataOCD](https://datosabiertos.compraspublicas.gob.ec/PLATAFORMA), detalla un valor de  $6.795.379.656,80  y para el mismo año en la página [Contratación en Cifras](https://app.powerbi.com/view?r=eyJrIjoiMWI4MjI3ODktYWY0NS00YWRmLThmMzItMDZhOWNiZmY2NTI1IiwidCI6ImQ2NDk2NzM4LWY5MTItNGExZS04NDE1LTQwY2E2ZjRhOTRlZCJ9 ), detalla un valor de  $7.698.094.935,14. **Para futura investigaciones es importante que el SERCOP detalle una concordancia de la información, permitiendo así un análisis más apegado a la realidad de la Compra Pública. \n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "IA_CP_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}